name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          cp .env.example .env
          echo "APP_KEY=base64:$(openssl rand -base64 32)" >> .env
          echo "APP_ENV=testing" >> .env
          echo "DB_HOST=mysql" >> .env
          echo "DB_DATABASE=laravel_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=password" >> .env

      - name: Build and start services
        run: |
          docker compose -f docker-compose.ci.yml up -d --build
          sleep 30

      - name: Install dependencies and setup
        run: |
          docker compose -f docker-compose.ci.yml exec -T app composer install --optimize-autoloader
          docker compose -f docker-compose.ci.yml exec -T app npm install
          docker compose -f docker-compose.ci.yml exec -T app npm run build
          docker compose -f docker-compose.ci.yml exec -T app php artisan key:generate --ansi
          docker compose -f docker-compose.ci.yml exec -T app php artisan config:cache
          docker compose -f docker-compose.ci.yml exec -T app php artisan migrate:fresh --seed

      - name: Run tests
        run: |
          docker compose -f docker-compose.ci.yml exec -T app php artisan test

      - name: Cleanup
        run: docker compose -f docker-compose.ci.yml down -v
