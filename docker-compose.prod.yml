version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - laravel-storage-production:/var/www/html/storage
      - laravel-public-production:/var/www/html/public
    env_file:
      - .env
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
    networks:
      - laravel-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - laravel-public-production:/var/www/html/public:ro
      - ./docker/nginx/production.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - laravel-production
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    working_dir: /var/www/html
    command: ["php", "artisan", "schedule:work"]
    volumes:
      - laravel-storage-production:/var/www/html/storage
    env_file:
      - .env
    environment:
      - APP_ENV=production
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - REDIS_HOST=redis
    networks:
      - laravel-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  queue:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    working_dir: /var/www/html
    command: ["php", "artisan", "queue:work", "--verbose", "--tries=3", "--timeout=90"]
    volumes:
      - laravel-storage-production:/var/www/html/storage
    env_file:
      - .env
    environment:
      - APP_ENV=production
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - REDIS_HOST=redis
    networks:
      - laravel-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:17
    restart: unless-stopped
    user: postgres
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - postgres-data-production:/var/lib/postgresql/data
    networks:
      - laravel-production
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - laravel-production
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  laravel-production:

volumes:
  postgres-data-production:
  laravel-storage-production:
  laravel-public-production:
