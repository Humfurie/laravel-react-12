services:
  php-fpm:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
      target: production
    restart: unless-stopped
    volumes:
      - laravel-storage-production:/var/www/storage
    env_file:
      - .env
    networks:
      - laravel-production
    ports:
      - "${APP_PORT:-80}:80"  # Expose PHP-FPM port
    healthcheck:
      test: [ "CMD-SHELL", "php-fpm-healthcheck || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy

  php-cli:
    build:
      context: .
      dockerfile: ./docker/php-cli/Dockerfile
    tty: true
    stdin_open: true
    env_file:
      - .env
    networks:
      - laravel-production

  postgres:
    image: postgres:17
    restart: unless-stopped
    user: postgres
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - postgres-data-production:/var/lib/postgresql/data
    networks:
      - laravel-production
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - laravel-production
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  laravel-production:

volumes:
  postgres-data-production:
  laravel-storage-production:
